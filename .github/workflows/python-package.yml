name: Build and Release

on:
  push:
    tags:
      - "*"
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-windows:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          architecture: "x64"

      - name: Setup Python and venv
        run: |
          python -m venv venv
          .\venv\Scripts\activate
          python -m pip install --upgrade pip
          python -m pip install wheel pyinstaller
          pip install -r requirements.txt

      - name: Build Windows Executable
        run: |
          .\venv\Scripts\activate
          pyinstaller --noconfirm KickViewerBOT.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/KickViewerBOT.exe

  build-macos:
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Python and venv
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install pyinstaller
          pip install -r requirements.txt

      - name: Build MacOS App
        run: |
          source venv/bin/activate
          pyinstaller --noconfirm KickViewerBOT-macOS.spec

      - name: zip the app
        run: |
          cd dist
          zip -r KickViewerBOT-MacOS.zip KickViewerBOT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: dist/KickViewerBOT-MacOS.zip

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Extract tag name
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          # Check if tag contains beta, alpha, rc, or preview
          if [[ "${GITHUB_REF#refs/tags/}" =~ (beta|alpha|rc|preview) ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
          fi

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          prerelease: ${{ steps.get_version.outputs.IS_PRERELEASE }}

          body: |
            # 🚀 KickViewerBOT - Game-Changing Stability Update

            ## ✨ What's New?

            ### 🔥 Introducing Stability Mode - The Ultimate Viewer Bot Experience

            **Stability Mode is a revolutionary approach to viewer botting that changes everything:**

            - **🎯 Persistent Connections:** Unlike traditional bots that reconnect constantly, Stability Mode maintains long-lived WebSocket connections that stay active for hours
            - **📈 Rock-Solid Viewer Counts:** Say goodbye to fluctuating numbers! Your viewer count stays consistent and stable, just like real viewers
            - **🛡️ Platform-Friendly:** Mimics real user behavior with proper handshakes, tracking events, and ping/pong cycles - exactly how Kick expects it
            - **⚡ Set It & Forget It:** Start the bot and walk away - connections maintain themselves with automatic health monitoring and reconnection
            - **💪 Premium Feature:** Available exclusively for Active, Premium, and Lifetime subscribers

            **How Stability Mode Works:**
            - Sends proper `channel_handshake` messages every 15 seconds (just like real browsers)
            - Maintains viewer tracking with `user_event` messages every 30 seconds
            - Keeps connections alive with smart ping/pong cycles
            - Auto-recovers from disconnections with exponential backoff
            - Monitors connection health and maintains 90% uptime target

            ### 🔧 Smart Port Management

            - **Automatic Port Discovery:** Bot automatically finds an available port - no more "port already in use" errors!
            - **Crystal-Clear Error Messages:** If something goes wrong, you get helpful troubleshooting steps
            - **Browser Compatibility:** Improved handling of browser WebSocket connections
            - **Multi-Instance Support:** Run multiple bots without conflicts

            ### 🐛 Bug Fixes & Improvements

            - ✅ Fixed viewer count dropping after 1 minute (now sends proper tracking events)
            - ✅ Enhanced WebSocket message handling with full Kick protocol support
            - ✅ Improved connection stability with better error recovery
            - ✅ Added comprehensive logging for debugging
            - ✅ Better proxy rotation and token management
            - ✅ Frontend correctly displays "Active Connections" in Stability Mode

            ---

            ## 📥 Getting Started

            ### For Stability Mode:
            1. Download and run the bot
            2. Enable "Stability Mode" in settings (requires active support with patreon)
            3. Set your desired thread count
            4. Watch your viewer count stabilize and stay there! 🎯

            ### For Standard Mode:
            - Works exactly as before with short-lived connections
            - Perfect for quick boosts or testing

            ---

            ## 💡 Why This Update Matters

            **Before:** Viewer counts would spike, then drop, then spike again - inconsistent and suspicious.

            **After:** Smooth, stable viewer counts that look completely natural. Stability Mode makes your stream look genuinely popular! 🌟

            ---

            **Need help?** [Open an issue](https://github.com/H1B0B0/Kick-Viewerbot/issues) or join our Discord community!

            *Thank you for supporting KickViewerBOT! This is our biggest stability improvement yet.* 🙏

          draft: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-build/KickViewerBOT.exe
          asset_name: KickViewerBOT-Windows.exe
          asset_content_type: application/octet-stream

      - name: Upload MacOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos-build/KickViewerBOT-MacOS.zip
          asset_name: KickViewerBOT-MacOS.zip
          asset_content_type: application/zip
